generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String       @unique
  password    String
  role        UserRole     @default(USER)
  // field opsional untuk agent
  position    String?
  phone       String?
  photoUrl    String?
  address     AddressInfo?
  postalCode  Int?
  taxId       String?
  bio         String?
  socialMedia SocialMedia?
  // relasi
  properties  Property[]   @relation("AgentProperties")
  favorites   Favorite[]
  tokens      String?
}

model Property {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  price       Float
  status      PropertyStatus
  type        PropertyType
  bedrooms    Int
  bathrooms   Int
  squareFeet  Int?
  address     String
  city        String
  state       String?
  country     String
  images      String[]
  isFeatured  Boolean        @default(false)

  // relasi ke user sebagai agent
  agent   User?   @relation("AgentProperties", fields: [agentId], references: [id])
  agentId String? @db.ObjectId

  favorites Favorite[]
}

model Favorite {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String   @db.ObjectId

  @@unique([userId, propertyId])
}

enum UserRole {
  USER
  AGENT
}

enum PropertyType {
  house
  apartment
  office
  villa
}

enum PropertyStatus {
  buy
  rent
}

type AddressInfo {
  city    String
  state   String
  country String
}

type SocialMedia {
  facebook  String
  x         String
  linkedIn  String
  instagram String
}
